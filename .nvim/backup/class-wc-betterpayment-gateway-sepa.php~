<?php
/**
 * Better Payment SEPA Gateway
 *
 * @class        WC_BetterPayment_Gateway_Sepa
 * @extends        WC_BetterPayment_Gateway_Base
 */
if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly
}
if ( ! class_exists( 'WC_BetterPayment_Gateway_Sepa' ) ) :
	if ( ! class_exists( 'WC_BetterPayment_Gateway_Base' ) ) {
		include 'class-wc-betterpayment-gateway-base.php';
	}

	class WC_BetterPayment_Gateway_Sepa extends WC_BetterPayment_Gateway_Base{
		// Setup our Gateway's id, description and other values
		public function __construct() {
			parent::__construct();
			// The global ID for this Payment method
			$this->id           = "betterpayment_dd";
			$this->gateway_type = 'dd';
			$this->notify_url   = WC()->api_request_url( self::class );
			// The Title shown on the top of the Payment Gateways Page next to all the other Payment Gateways
			$this->method_title = __( "Better Payment Direct Debit", 'woocommerce-betterpayment' );
			// The description for this Payment Gateway, shown on the actual Payment options page on the backend
			$this->method_description = __( "Better Payment Gateway Plug-in for WooCommerce",
				'woocommerce-betterpayment' );
			// If you want to show an image next to the gateway's name on the frontend, enter a URL to an image.
			$this->icon = null;
			// Bool. Can be set to true if you want payment fields to show on the checkout
			// If doing a direct integration, which we are doing in this case
			$this->has_fields = true;
			// Supports the default credit card form
			$this->supports = array( 'default_credit_card_form' );
			// This basically defines your settings which are then loaded with init_settings ()
			$this->init_form_fields();
			// After init_settings () is called, you can get the settings and load them into variables, eg:
			// $this->title = $this->get_option ('title');
			$this->init_settings();
			// Turn these settings into variables we can use
			foreach ( $this->settings as $setting_key => $value ) {
				$this->$setting_key = $value;
			}
			// Save settings
			if ( is_admin() ) {// Versions over 2.0
				// Save our administration options. Since we are not going to be doing anything special
				// We have not defined 'process_admin_options' in this class so the method in the parent
				// Class will be used instead
				add_action( 'woocommerce_update_options_payment_gateways_' . $this->id,
					array( $this, 'process_admin_options' ) );
			}
			if ( is_checkout() ) {
				add_action( 'wp_enqueue_scripts', array( $this, 'register_scripts' ) );
			}
			add_action( 'woocommerce_receipt_' . $this->id, array( $this, 'receipt_page' ) );
		}

		public function init_form_fields() {
			$this->form_fields = array(
				'enabled'     => array(
					'title'   => __( 'Enable/Disable', 'woocommerce-betterpayment' ),
					'type'    => 'checkbox',
					'label'   => __( 'Enable Direct Debit Payment', 'woocommerce-betterpayment' ),
					'default' => 'yes'
				),
				'title'       => array(
					'title'       => __( 'Title', 'woocommerce-betterpayment' ),
					'type'        => 'text',
					'description' => __( 'This controls the title which the user sees during checkout.',
						'woocommerce-betterpayment' ),
					'default'     => __( 'Direct Debit Payment', 'woocommerce-betterpayment' ),
					'desc_tip'    => true,
				),
				'description' => array(
					'title'   => __( 'Customer Message', 'woocommerce-betterpayment' ),
					'type'    => 'textarea',
					'default' => ''
				)
			);
		}

		public function register_scripts() {
			wp_deregister_script( 'wc-checkout' );
			wp_register_script( 'wc-checkout',
				plugins_url( '/assets/js/checkout.js', BETTERPAYMENT_PLUGIN_FILE ),
				array( 'jquery', 'woocommerce', 'wc-country-select', 'wc-address-i18n' ),
				null,
				true );
			wp_register_script( 'betterpayment-core',
				plugins_url( '/assets/js/core.js', BETTERPAYMENT_PLUGIN_FILE ),
				array( 'betterpayment-core-ini' ),
				null,
				true );
			wp_register_script( 'betterpayment-debit',
				plugins_url( '/assets/js/debit.js', BETTERPAYMENT_PLUGIN_FILE ),
				array( 'jquery', 'betterpayment-core', 'wc-checkout' ),
				null,
				true );
			wp_enqueue_script( 'betterpayment-debit' );
		}

		protected function get_specific_details( WC_Order $order ) {
			$session = WC()->session;
			$token = $session->get( 'bp-token' );
			unset( $session->{'bp-token'} );
			return $this->get_billing_details( $order ) + $this->get_redirection_urls_details( $order ) +
				$this->get_bank_account_details( $order ) + array(
				'original_transaction_id' => $token
			);
		}

		public function credit_card_form( $args = array(), $fields = array() ) {
			$default_args = array(
				'fields_have_names' => true, // Some gateways like stripe don't need names as the form is tokenized
			);
			$args         = wp_parse_args( $args,
				apply_filters( 'woocommerce_credit_card_form_args', $default_args, $this->id ) );
			$default_fields = array(
				'error_field'       => '<div id="upg-dd-error" class="validation-failed" style="display:none;padding:5px;margin:10px 20px;color:#a00"></div>',
				'currency-field'    => '<input data-upg-name="currency" type="hidden" class="remove-from-form" id="' . $this->id . '_currency" value="' . get_woocommerce_currency() . '" autocomplete="off">',
				'bank-format-field'    => '<input  type="hidden" id="' . $this->id . '_bank_format" name="' . $this->id . '_bank_format" value="">',
				'total-field'       => '<input data-upg-name="total" type="hidden" class="remove-from-form" id="' . $this->id . '_total" value="' . WC()->cart->total . '" autocomplete="off">',
				'token-field'       => '<input data-upg-name="token" type="hidden" id="betterpayment_dd_token" name="' . $this->id . '_token" value="">',
				'mandate-field'     => '<p class="form-row form-row-wide">
				<label for="' . esc_attr( $this->id ) . '-mandate">' . __( 'Mandate reference',
						'woocommerce-betterpayment' ) . '</label><input id="' . esc_attr( $this->id ) . '-mandate" data-upg-name="mandate" data-upg-validator="Holder" class="input-text wc-credit-card-form-holder-name" type="text" placeholder="' . __( 'Mandate reference', 'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-mandate" /></p><p>' . sprintf( __( 'tpl-legitimate-merchant-name', 'woocommerce-betterpayment' ),
						get_bloginfo( 'name' ) ) . '</p>',
						/*
				'surname-field'     => '<p class="form-row form-row-first">
				<label for="' . esc_attr( $this->id ) . '-surname">' . __( 'Surname',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-surname" data-upg-name="surname" class="input-text wc-credit-card-form-holder-name validate-debit-set" type="text" autocomplete="off" placeholder="' . __( 'Surname',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-surname" />
			</p>',
				'name-field'        => '<p class="form-row form-row-last">
				<label for="' . esc_attr( $this->id ) . '-name">' . __( 'Name',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-name" data-upg-name="name" class="input-text wc-credit-card-form-holder-name validate-debit-set" type="text" autocomplete="off" placeholder="' . __( 'Name',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-name" />
			</p>',
				'street_field'      => '<p class="form-row form-row-wide">
				<label for="' . esc_attr( $this->id ) . '-street">' . __( 'Street, number',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-street" data-upg-name="street" data-upg-validator="Holder" class="input-text wc-credit-card-form-holder-name validate-debit-set" type="text" autocomplete="off" placeholder="' . __( 'Street, number',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-street" />
			</p>',
				'postcode_field'      => '<p class="form-row form-row-wide">
				<label for="' . esc_attr( $this->id ) . '-postcode">' . __( 'Postcode, city',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-postcode" data-upg-name="postcode" data-upg-validator="Holder" class="input-text wc-credit-card-form-holder-name validate-debit-set" type="text" autocomplete="off" placeholder="' . __( 'Postcode, city',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-postcode" />
			</p>',
			*/
				'holder-field'     => '<p class="form-row form-row-wide">
				<label for="' . esc_attr( $this->id ) . '-holder-name">' . __( 'Holder name',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-holder-name" data-upg-name="holder" data-upg-validator="Holder" class="input-text bp-disable-on-error" type="text" autocomplete="off" placeholder="' . __( 'Holder name',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-holder-name" />
			</p>',
				'iban-field'     => '<p class="form-row form-row-wide">
				<label for="' . esc_attr( $this->id ) . '-iban">' . __( 'IBAN/account number',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-iban" data-upg-name="iban" data-upg-validator="Iban" class="input-text bp-disable-on-error" type="text" autocomplete="off" placeholder="' . __( 'IBAN/account number',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-iban" />
			</p>',
				'bic-field'     => '<p class="form-row form-row-wide">
				<label for="' . esc_attr( $this->id ) . '-bic">' . __( 'BIC/bank code',
						'woocommerce-betterpayment' ) . ' <span class="required">*</span></label>
				<input id="' . esc_attr( $this->id ) . '-bic" data-upg-name="holder" data-upg-validator="Bic" class="input-text bp-disable-on-error" type="text" autocomplete="off" placeholder="' . __( 'BIC/bank code',
						'woocommerce-betterpayment' ) . '" name="' . esc_attr( $this->id ) . '-bic" />
			</p><p>' . __( 'tpl-notice-within-eight-weeks-time-from-the-date-of-charge', 'woocommerce-betterpayment' ) . '</p>',
				'confirm_field'      => '<p class="form-row form-row-wide">
				<input  name="' . esc_attr( $this->id ) . '-confirm"  id="' . esc_attr( $this->id ) . '-confirm" data-upg-name="confirm" class="input-checkbox bp-disable-on-error" type="checkbox" /> ' . __( 'tpl-i-hereby-confirm', 'woocommerce-betterpayment' ) . '</p>',
			);
			$fields         = wp_parse_args( $fields,
				apply_filters( 'woocommerce_credit_card_form_fields', $default_fields, $this->id ) );
			?>
			<script type="text/javascript">
				//<![CDATA[
				var validationDdMessageSet = {
					'holder': '<?php echo __('Please enter holder name', 'woocommerce-betterpayment'); ?>',
					'iban': '<?php echo __('Please enter a valid IBAN', 'woocommerce-betterpayment'); ?>',
					'bic': '<?php echo __('Please enter the BIC code', 'woocommerce-betterpayment'); ?>',
					'authorization': '<?php echo __('Please confirm the mandate', 'woocommerce-betterpayment'); ?>',
					'notset': '<?php echo __('Please enter the required field or reenter it correct', 'woocommerce-betterpayment'); ?>',
					'mandateReqError': '<?php echo __('This payment method is currently not available', 'woocommerce-betterpayment'); ?>',
					'other': '<?php echo __('An error occurred. Please review your payment details.', 'woocommerce-betterpayment'); ?>'
				};
				//]]>
			</script>
			<fieldset id="<?php echo $this->id; ?>_form">
				<?php do_action( 'woocommerce_credit_card_form_start', $this->id ); ?>
				<?php
				foreach ( $fields as $field ) {
					echo $field;
				}
				?>
				<?php do_action( 'woocommerce_credit_card_form_end', $this->id ); ?>
				<div class="clear"></div>
			</fieldset>
			<?php
		}
	}
endif;
